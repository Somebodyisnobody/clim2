		     CLIM 2.2.1 for ACL 5.0.beta
			Windows 95 and NT 4.0

Files in this release:

clim221.txt
    This file.
code/climnt.fasl
code/climg.fasl
code/climps.fasl
code/climdemo.fasl
    The above are the fasl files making up the product.
code/winapi.fasl
code/winapi-dev.fasl
    The above are updated fasl with respect to 5.0.beta.
src/clim/demo/
    The source files to the CLIM demos.

To use CLIM on Windows evaluate this form:
	(require :climnt)

To run the CLIM demos, evaluate these forms:
       (require :climdemo)
       (clim-demo:start-demo)

There are several known problems with the current release.

1.  This version of CLIM only works in a case insensitive Lisp.  We
    hope to fix this for the final release.

2.  In this version, you must call run-frame-top-level in the same
    thread or Lisp "process" that you call
    make-application-frame. This is a limitation imposed by Windows
    and is related to the way that SendMessage() must work.  Windows
    wants a window to be closely linked to the thread that created it.
    This limitation is not present in UNIX versions of CLIM, and as a
    result UNIX clim code may not run without some modification.  An
    error will be signalled if this constraint is violated.  This
    limitation was not present in the alpha release of CLIM for NT
    because all Lisp "processes" ran in a single operating system
    thread.
 
    For example, you must replace this:
      (let ((frame (make-application-frame 'mine)))
	(mp:process-run-function #'run-frame-top-level frame))

    with something like this:
      (mp:process-run-function 
	 #'(lambda () 
	      (run-frame-top-level (make-application-frame 'mine))))

Changes since the alpha release of CLIM:

1.  CLIM is not distributed as a Lisp image file anymore.  It is
    distributed as a set of fasl files.  You can build a clim.dxl by
    loading <acl dir>/buildclim.cl.  It will create a clim.exe and
    clim.dxl.  You can then run CLIM by executing clim.exe.

    You can also build applications using generate-application and
    putting the appropriate require's (of :climnt) in your sources.

2.  Windows 95 is supported.

3.  CLIM applications are about 10 megabytes smaller.

4.  CLIM follows more of the Windows User Interface guidelines. This
    includes windows that are LtGray, dialog boxes that are
    application-modal, and menus that are "native."

5.  select-file now uses the familiar windows dialog boxes via calls
    to GetOpenFileName() and GetSaveFileName(). Use the keyword
    :DIALOG-TYPE with a value of either :OPEN or :SAVE to control
    which one you want.

6.  notify-user now uses the familiar windows dialog boxes via calls
    to MessageBox().
