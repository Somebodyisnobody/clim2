;;; -*- Mode: Lisp; Syntax: ANSI-Common-Lisp; Package: CLIM-INTERNALS; Base: 10; Lowercase: Yes -*-

;; $fiHeader: prefill.lisp,v 1.1 92/01/31 14:28:03 cer Exp $

(in-package :clim-internals)

"Copyright (c) 1990, 1991, 1992 Symbolics, Inc.  All rights reserved."

;;; This file prefills generic function dispatch caches at load time so that
;;; there won't be so much delay starting things up the first time the application
;;; is run.

;;; The first page of this file contains commented-out functions for gathering the
;;; necessary information.  The second page contains the prefill mechanism.  The
;;; third page contains calls to the prefill mechanism, generated by running the
;;; commented-out functions after running the usual CLIM demos on both Genera and
;;; Cloe, in CLIM 13.x, and then manually massaging the results.  The file
;;; CLIM:DEMO;DEMO-PREFILL contains additional prefills specific to the demos.


#||

;; Exercise the system with a synthetic load (i.e. run demos) and then
;; call this function to produce calls to PREFILL-DISPATCH-CACHES
;; corresponding to what has actually been called.  You can also call
;; the function GENERATE-PREFILL-DISPATCH-CACHES on whatever classes you
;; deem interesting.  This only works in Symbolics Genera and Cloe.

(defun generate-all-prefill-dispatch-caches (&optional file)
  (if file
      (with-open-file (*standard-output* file :direction :output)
	(generate-all-prefill-dispatch-caches))
      (let ((*print-pretty* t)
	    (*print-length* nil)
	    (*print-level* nil))
	(dolist (base-class '(transformation
			      ;; This gets us all kinds of windows and output records, too
			      design
			      line-style
			      text-style
			      device-font
			      ;; WINDOW-STREAM stuff gets listed twice, but we
			      ;; need ACCEPT-VALUES-STREAM, STANDARD-INPUT-EDITING-STREAM, etc.
			      fundamental-stream
			      pointer
			      console
			      device-event
			      view
			      basic-history
			      application-frame
			      command-table
			      noise-string
			      display-device
			      io-buffer
			      queue
			      cursor
			      accept-values-query
			      presentation-translator))
	  (format t "~2%;;; ~(~S~)~2%~S"
		  `(generate-prefill-dispatch-caches ',base-class)
		  (generate-prefill-dispatch-caches base-class)))
	;; This is only the presentation types that I think all applications use
	(dolist (base-class '(command command-name command-arguments keyword-argument-name
			      command-or-form expression 
			      command-menu-element menu-item
			      completion subset-completion sequence null blank-area))
	  (format t "~2%;;; ~(~S~)~2%~S"
		  `(generate-prefill-dispatch-caches
		     (find-presentation-type-class ',base-class))
		  (generate-prefill-dispatch-caches
		    (find-presentation-type-class base-class)))))))

(defun generate-prefill-dispatch-caches (class-name)
  (let ((generic-functions nil)
	(classes nil))
    (clos-internals::map-over-class-and-its-subclasses class-name
      #'(lambda (class)
	  (pushnew (class-name class) classes)
	  (clos-internals::map-over-dispatch-table
	    #'(lambda (selector handler extra-argument)
		(typecase selector
		  (cons
		    (pushnew (first selector) generic-functions))
		  (clos-internals::generic-function-selector
		    (when (clos-internals::generic-function-clos selector)
		      (pushnew (clos-internals::funcallable-instance-from-generic-selector
				 selector)
			       generic-functions)))
		  (otherwise))
		(values selector handler extra-argument))
	    (clos-internals::%instance-information-dispatch-table
	      (clos-internals::class-instance-information class)))))
    (setq generic-functions (sort generic-functions
				  #'(lambda (x y)
				      (setq x (clos:generic-function-name x)
					    y (clos:generic-function-name y))
				      (let ((xx (if (atom x) x (second x)))
					    (yy (if (atom y) y (second y))))
					(if (eq xx yy)
					    (or (atom x)
						(and (consp y)
						     (string<= (first x) (first y))))
					    (string<= xx yy))))))
    `(prefill-dispatch-caches
      ,@(mapcar
	 #'(lambda (generic-function)
	     (let ((nargs
		    (length (clos-internals::dispatching-funcallable-instance-precedence-order
			      generic-function)))
		   (calls nil))
	       (labels ((mapper (dispatch handler extra-argument state &rest arguments)
			  (declare (dynamic-extent arguments))
			  (ecase (clos-internals::dispatch-type dispatch)
			    (clos-internals::class-dispatch
			      (apply #'clos-internals::generic-function-map-over-dispatch
				     generic-function handler extra-argument state
				     #'mapper
				     (clos-internals::class-dispatch-position dispatch)
				     (class-name
				       (clos-internals::class-dispatch-class dispatch))
				     arguments))
			    (clos-internals::eql-dispatch
			      (let ((key-or-nil
				      (clos-internals::eql-dispatch-key-or-nil dispatch)))
				(when key-or-nil
				  (apply #'clos-internals::generic-function-map-over-dispatch
					 generic-function handler extra-argument state
					 #'mapper
					 (clos-internals::eql-dispatch-position dispatch)
					 `(eql ,(cond ((eq key-or-nil +foreground-ink+)
						       `+foreground-ink+)
						      ((eq key-or-nil +background-ink+)
						       `+background-ink+)
						      ((eq key-or-nil +everywhere+)
						       `+everywhere+)
						      ((eq key-or-nil +nowhere+)
						       `+nowhere+)
						      ((eq key-or-nil +flipping-ink+)
						       `+flipping-ink+)
						      ((typep key-or-nil '(or number
									      character
									      (member t nil)
									      keyword))
						       key-or-nil)
						      (t `',key-or-nil)))
					 arguments))))
			      (clos-internals::finish-dispatch
				(when (do ((l arguments (cddr l)))
					  ((null l) nil)
					(when (member (second l) classes)
					  (return t)))
				  (pushnew (do ((i (1- nargs) (1- i))
						(l nil))
					       ((< i 0) l)
					     (push (getf arguments i 't) l))
					   calls :test #'equal))))
			    (values handler extra-argument)))
		   (clos-internals::map-over-generic-function-computed-dispatches
		     generic-function #'mapper)
		   `(,(clos:generic-function-name generic-function)
		     ,@calls))))
	   generic-functions))))
||#

;;; Prefill dispatch caches for a bunch of generic function calls
(defmacro prefill-dispatch-caches (&body clauses &environment env)
  (let (function)
    (labels ((expand-clause (clause)
	       (setq function (car clause))
	       (unless (clos-internals::fboundp-in-environment function env)
		 #+++ignore	;until we fix CLOS
		 (warn "prefill-dispatch-caches: ~S is not a defined generic function."
		       function))
	       (mapcan #'expand-call (cdr clause)))
	     (expand-call (args)
	       (dolist (arg args)
		 (unless (cond ((atom arg) (find-class arg nil env))
			       ((eq (first arg) 'eql) t)
			       ((eq (first arg) 'presentation-type)
				(find-presentation-type-class (second arg) nil env)))
		   #+++ignore	;until we fix CLOS
		   (warn "prefill-dispatch-caches: ~S is not a valid specializer in the ~
			  arguments to ~S."
			 arg function)))
	       `(',function
		 ,(if (some #'needs-evaluation args)
		      `(list ,@(mapcar #'(lambda (arg)
					   (if (and (consp arg) (eq (first arg) 'eql))
					       ``(eql ,,(second arg))
					       ``,',arg))
				       args))
		      `',(mapcar #'(lambda (arg)
				     (if (and (consp arg) (eq (first arg) 'eql))
					 `(eql ,(eval (second arg)))
					 arg))
				 args))))
	     (needs-evaluation (arg)
	       (and (consp arg)
		    (eq (first arg) 'eql)
		    (not (if (consp (second arg))
			     (eq (first (second arg)) 'quote)
			     (typep (second arg)
				    '(or number character keyword (member t nil))))))))
      `(prefill-dispatch-caches-1
	 ,@(mapcan #'expand-clause clauses)))))

(defun prefill-dispatch-caches-1 (&rest calls)
  (declare (dynamic-extent calls))
  (dorest (calls calls cddr)
    (let ((generic-function
	    (and (clos-internals::fboundp-in-environment (first calls) nil)
		 (clos-internals::fdefinition-in-environment (first calls) nil)))
	  (arguments (mapcar #'(lambda (arg)
				 (setq arg (cond ((atom arg) (find-class arg))
						 ((eq (first arg) 'eql) arg)
						 ((eq (first arg) 'presentation-type)
						  (find-presentation-type-class (second arg)))
						 (t
						  (error "Invalid argument specification: ~S"
							 arg))))
				 (when (typep arg 'class)
				   (unless (clos-internals::class-finalized-p arg)
				     (clos-internals::finalize-inheritance arg)))
				 arg)
			     (second calls))))
      (unless (typep generic-function 'generic-function)
	(error "~S is not a defined generic function." (first calls)))
      #+Symbolics				;Symbolics CLOS, that is
      (clos-internals::generic-function-ensure-specializers-mapped
	generic-function arguments #'clos-internals::standard-method-combiner)
      #-Symbolics
      (error "I don't know how to prefill generic function dispatch caches except in Symbolics CLOS"))))


;;; This page contains the non-demo-specific results after running the demos in
;;; both Genera and Cloe.  Some things have been commented out since they didn't
;;; seem important, machine-dependent things have been conditionalized, and
;;; demo-specific things have been moved to the demo specific file.  Otherwise
;;; the only hand-massaging was to standardize the pretty printing and remove
;;; some duplicate entries and things only used when printing internal objects.

;;; (generate-prefill-dispatch-caches 'transformation)

(PREFILL-DISPATCH-CACHES
  (COMPOSE-TRANSFORMATIONS
    (IDENTITY-TRANSFORMATION STANDARD-TRANSFORMATION)
    (IDENTITY-TRANSFORMATION TRANSLATION-TRANSFORMATION)
    (TRANSLATION-TRANSFORMATION STANDARD-TRANSFORMATION)
    (STANDARD-TRANSFORMATION TRANSLATION-TRANSFORMATION)
    (STANDARD-TRANSFORMATION STANDARD-TRANSFORMATION)
    (STANDARD-TRANSFORMATION IDENTITY-TRANSFORMATION)) 
  #+Genera (CLOS-INTERNALS:OPERATION-HANDLED-P (TRANSLATION-TRANSFORMATION T)
					       (IDENTITY-TRANSFORMATION T)
					       (STANDARD-TRANSFORMATION T))
  (RECTILINEAR-TRANSFORMATION-P (IDENTITY-TRANSFORMATION) 
				(STANDARD-TRANSFORMATION)) 
  (TRANSFORM-DISTANCE (STANDARD-TRANSFORMATION T T) 
		      (IDENTITY-TRANSFORMATION T T)) 
  (TRANSFORM-POINT* (IDENTITY-TRANSFORMATION T T) 
		    (STANDARD-TRANSFORMATION T T)))


;;; (generate-prefill-dispatch-caches 'design)

(PREFILL-DISPATCH-CACHES
  (STREAM-ACCEPT
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-ADD-CHARACTER-OUTPUT
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (ADD-CHARACTER-OUTPUT-TO-TEXT-RECORD
    (STANDARD-TEXT-OUTPUT-RECORD T T T T T)
    (STYLED-TEXT-OUTPUT-RECORD T T T T T))
  (STREAM-ADD-OUTPUT-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (ADD-OUTPUT-RECORD (T STANDARD-CELL-OUTPUT-RECORD)
		     (T STANDARD-PRESENTATION)
		     (T STANDARD-ITEM-LIST-OUTPUT-RECORD)
		     (T STANDARD-SEQUENCE-OUTPUT-RECORD)
		     (T STANDARD-TREE-OUTPUT-HISTORY)
		     (T STANDARD-UPDATING-OUTPUT-RECORD)
		     (T ACCEPT-VALUES-OUTPUT-RECORD)
		     (T STANDARD-ROW-OUTPUT-RECORD)
		     (T BORDER-OUTPUT-RECORD)
		     (T STANDARD-TABLE-OUTPUT-RECORD))
  (STREAM-ADD-STRING-OUTPUT
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T))
  (ADD-STRING-OUTPUT-TO-TEXT-RECORD
    (STANDARD-TEXT-OUTPUT-RECORD T T T T T T T)
    (STYLED-TEXT-OUTPUT-RECORD T T T T T T T))
  (ADJUST-TABLE-CELLS (STANDARD-ITEM-LIST-OUTPUT-RECORD) (STANDARD-TABLE-OUTPUT-RECORD) (STANDARD-ROW-OUTPUT-RECORD))
  (BOUNDING-RECTANGLE*
    #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
    #+Cloe-Runtime (CLOE-WINDOW-STREAM)
    #+Genera (SHEET-WINDOW-STREAM)
    #+Minima (CLX-WINDOW)
    (STANDARD-BOUNDING-RECTANGLE)
    (STANDARD-SEQUENCE-OUTPUT-RECORD)
    (STANDARD-ITEM-LIST-OUTPUT-RECORD)
    (STANDARD-PRESENTATION)
    (STANDARD-CELL-OUTPUT-RECORD)
    (STANDARD-TEXT-OUTPUT-RECORD)
    (STYLED-TEXT-OUTPUT-RECORD)
    (STANDARD-TREE-OUTPUT-HISTORY)
    (POLYGON-DISPLAYED-OUTPUT-RECORD)
    (ELLIPSE-DISPLAYED-OUTPUT-RECORD)
    (LINE-DISPLAYED-OUTPUT-RECORD)
    (RECTANGLE-DISPLAYED-OUTPUT-RECORD)
    (STRING-DISPLAYED-OUTPUT-RECORD)
    (STANDARD-UPDATING-OUTPUT-RECORD)
    (ACCEPT-VALUES-OUTPUT-RECORD)
    (STANDARD-POINT)
    (STANDARD-TABLE-OUTPUT-RECORD)
    (BORDER-OUTPUT-RECORD)
    (STANDARD-ROW-OUTPUT-RECORD))
  (BOUNDING-RECTANGLE-SET-EDGES
    (STANDARD-SEQUENCE-OUTPUT-RECORD T T T T)
    (STANDARD-ITEM-LIST-OUTPUT-RECORD T T T T)
    (STANDARD-PRESENTATION T T T T)
    (STANDARD-CELL-OUTPUT-RECORD T T T T)
    (STANDARD-TEXT-OUTPUT-RECORD T T T T)
    (STYLED-TEXT-OUTPUT-RECORD T T T T)
    (STANDARD-TREE-OUTPUT-HISTORY T T T T)
    #+Cloe-Runtime (CLOE-ROOT-WINDOW T T T T) 
    #+Cloe-Runtime (CLOE-WINDOW-STREAM T T T T)
    #+Genera (SHEET-WINDOW-STREAM T T T T)
    #+Minima (CLX-WINDOW T T T T)
    (POLYGON-DISPLAYED-OUTPUT-RECORD T T T T)
    (ELLIPSE-DISPLAYED-OUTPUT-RECORD T T T T)
    (LINE-DISPLAYED-OUTPUT-RECORD T T T T)
    (RECTANGLE-DISPLAYED-OUTPUT-RECORD T T T T)
    (STRING-DISPLAYED-OUTPUT-RECORD T T T T)
    (STANDARD-UPDATING-OUTPUT-RECORD T T T T)
    (ACCEPT-VALUES-OUTPUT-RECORD T T T T)
    (STANDARD-TABLE-OUTPUT-RECORD T T T T)
    (BORDER-OUTPUT-RECORD T T T T)
    (STANDARD-ROW-OUTPUT-RECORD T T T T))
  (BOUNDING-RECTANGLE-SET-POSITION*
    (STANDARD-TREE-OUTPUT-HISTORY T T)
    (STANDARD-CELL-OUTPUT-RECORD T T)
    (STANDARD-BOUNDING-RECTANGLE T T)
    #+Cloe-Runtime (CLOE-ROOT-WINDOW T T) 
    #+Cloe-Runtime (CLOE-WINDOW-STREAM T T)
    #+Genera (SHEET-WINDOW-STREAM T T)
    #+Minima (CLX-WINDOW T T)
    (STANDARD-TEXT-OUTPUT-RECORD T T)
    (STYLED-TEXT-OUTPUT-RECORD T T)
    (STANDARD-PRESENTATION T T)
    (ELLIPSE-DISPLAYED-OUTPUT-RECORD T T)
    (LINE-DISPLAYED-OUTPUT-RECORD T T))
  (BOUNDING-RECTANGLE-SET-SIZE
    (STANDARD-TEXT-OUTPUT-RECORD T T)
    (STYLED-TEXT-OUTPUT-RECORD T T)
    #+Cloe-Runtime (CLOE-ROOT-WINDOW T T)
    #+Cloe-Runtime (CLOE-WINDOW-STREAM T T)
    #+Genera (SHEET-WINDOW-STREAM T T)
    #+Minima (CLX-WINDOW T T)
    (STANDARD-BOUNDING-RECTANGLE T T))
  (CACHE-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T T))
  (CLEAR-OUTPUT-HISTORY 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (CLEAR-OUTPUT-RECORD (STANDARD-TREE-OUTPUT-HISTORY)
                       (STANDARD-UPDATING-OUTPUT-RECORD)
                       (ACCEPT-VALUES-OUTPUT-RECORD)
                       (STANDARD-PRESENTATION)
                       (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                       (STANDARD-CELL-OUTPUT-RECORD))
  #+Cloe-Runtime (CLOE-PROCESS-DEFERRED-EVENTS (CLOE-WINDOW-STREAM)) 
  #+Cloe-Runtime (CLOE-RECOMPUTE-SCROLL-BARS (CLOE-WINDOW-STREAM)) 
  (STREAM-CLOSE-TEXT-OUTPUT-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (COLOR-RGB (GRAY-COLOR) (RGB-COLOR))
  (COMPUTE-DIFFERENCES (STANDARD-UPDATING-OUTPUT-RECORD)
                       (ACCEPT-VALUES-OUTPUT-RECORD)
                       (STANDARD-PRESENTATION)
                       (STANDARD-TEXT-OUTPUT-RECORD)
                       (STYLED-TEXT-OUTPUT-RECORD)
                       (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                       (STANDARD-CELL-OUTPUT-RECORD)
                       (ELLIPSE-DISPLAYED-OUTPUT-RECORD)
                       (LINE-DISPLAYED-OUTPUT-RECORD))
  (COPY-AREA
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T))
  (COPY-DISPLAY-STATE (STANDARD-UPDATING-OUTPUT-RECORD T)
                      (ACCEPT-VALUES-OUTPUT-RECORD T)
                      (STANDARD-PRESENTATION T)
                      (STANDARD-ITEM-LIST-OUTPUT-RECORD T)
                      (STANDARD-CELL-OUTPUT-RECORD T))
  #+Cloe-Runtime (DC-IMAGE-FOR-INK (T GRAY-COLOR) 
				   (T FLIPPING-INK) 
				   (T RGB-COLOR) 
				   (T (EQL +BLACK+)) 
				   (T (EQL +WHITE+)) 
				   (T (EQL +FOREGROUND-INK+)) 
				   (T (EQL +BACKGROUND-INK+)))
  (DECACHE-INFERIOR-OUTPUT-RECORD (ACCEPT-VALUES-OUTPUT-RECORD T T)
                                  (STANDARD-ITEM-LIST-OUTPUT-RECORD T T)
                                  (STANDARD-UPDATING-OUTPUT-RECORD T T))
  (DECODE-FLIPPING-INK (FLIPPING-INK))
  (DECODE-PATTERN (PATTERN))
  (DECODE-RECTANGULAR-TILE (RECTANGULAR-TILE))
  (DECODE-STREAM-FOR-WRITING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (DELETE-OUTPUT-RECORD (T ACCEPT-VALUES-OUTPUT-RECORD)
			(T STANDARD-TREE-OUTPUT-HISTORY)
			(T STANDARD-SEQUENCE-OUTPUT-RECORD))
  (DO-TEXT-SCREEN-REAL-ESTATE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T T T))
  (DRAW-ELLIPSE-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T T T T T))
  (DRAW-ELLIPSE-METHOD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T T))
  (DRAW-LINE-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T))
  (DRAW-LINE-METHOD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T))
  (DRAW-POLYGON-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T))
  (DRAW-POLYGON-METHOD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T))
  (DRAW-RECTANGLE-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T))
  (DRAW-RECTANGLE-METHOD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (DRAW-STRING-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T T T T))
  (DRAW-STRING-METHOD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T)))

(PREFILL-DISPATCH-CACHES
  (DRAWING-SURFACE-TO-VIEWPORT-COORDINATES
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (INFERIORS-NEVER-OVERLAP-P (STANDARD-UPDATING-OUTPUT-RECORD)
			     (STANDARD-PRESENTATION)
			     (STANDARD-SEQUENCE-OUTPUT-RECORD)
			     (STANDARD-CELL-OUTPUT-RECORD))
  (ENCODE-STREAM-AFTER-WRITING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T))
  (EXTENDED-OUTPUT-STREAM-P #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
			    #+Cloe-Runtime (CLOE-WINDOW-STREAM)
			    #+Genera (SHEET-WINDOW-STREAM)
			    #+Minima (CLX-WINDOW))
  (FIND-CACHED-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T T))
  (FIND-INFERIOR-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T T)
                               (STANDARD-PRESENTATION T T)
                               (STANDARD-CELL-OUTPUT-RECORD T T))
  (FIND-QUERY (ACCEPT-VALUES-OUTPUT-RECORD T))
  (INVOKE-FORMATTING-CELL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))

  (GET-TEXT-OUTPUT-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STYLIZE-TEXT-OUTPUT-RECORD
    (STANDARD-TEXT-OUTPUT-RECORD T T))
  (GRAPHICS-STREAM-P
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (HIGHLIGHT-OUTPUT-RECORD-1 (STANDARD-PRESENTATION T T)
			     (STANDARD-TEXT-OUTPUT-RECORD T T)
			     (STYLED-TEXT-OUTPUT-RECORD T T))
  (HOST-WINDOW-MARGINS #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		       #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		       #+Genera (SHEET-WINDOW-STREAM)
		       #+Minima (CLX-WINDOW))
  (INCREMENTAL-REDISPLAY
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T))
  (INFERIOR-OUTPUT-RECORD-CHANGED (STANDARD-TREE-OUTPUT-HISTORY T T T T T))
  (INITIALIZE-MENU 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (INPUT-EDITING-STREAM-P 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MAKE-GRAY-COLOR-FOR-CONTRASTING-INK (CONTRASTING-INK))
  (MAP-OVER-MENU-CELLS (STANDARD-ITEM-LIST-OUTPUT-RECORD T))
  (MAP-OVER-OUTPUT-RECORDS-CONTAINING-POINT*
    (T STANDARD-TREE-OUTPUT-HISTORY T T)
    (T STANDARD-SEQUENCE-OUTPUT-RECORD T T)
    (T STANDARD-ITEM-LIST-OUTPUT-RECORD T T)
    (T STANDARD-PRESENTATION T T)
    (T STANDARD-CELL-OUTPUT-RECORD T T)
    (T STANDARD-TEXT-OUTPUT-RECORD T T)
    (T STYLED-TEXT-OUTPUT-RECORD T T)
    (T STANDARD-UPDATING-OUTPUT-RECORD T T)
    (T STRING-DISPLAYED-OUTPUT-RECORD T T)
    (T POLYGON-DISPLAYED-OUTPUT-RECORD T T)
    (T ELLIPSE-DISPLAYED-OUTPUT-RECORD T T)
    (T ACCEPT-VALUES-OUTPUT-RECORD T T)
    (T LINE-DISPLAYED-OUTPUT-RECORD T T)
    (T STANDARD-TABLE-OUTPUT-RECORD T T)
    (T STANDARD-ROW-OUTPUT-RECORD T T)
    (T RECTANGLE-DISPLAYED-OUTPUT-RECORD T T)
    (T BORDER-OUTPUT-RECORD T T))
  (MAP-OVER-OUTPUT-RECORDS-OVERLAPPING-REGION
    (T STANDARD-TREE-OUTPUT-HISTORY T)
    (T STANDARD-SEQUENCE-OUTPUT-RECORD T)
    (T STANDARD-ITEM-LIST-OUTPUT-RECORD T)
    (T STANDARD-PRESENTATION T)
    (T STANDARD-CELL-OUTPUT-RECORD T)
    (T STANDARD-TEXT-OUTPUT-RECORD T)
    (T STYLED-TEXT-OUTPUT-RECORD T)
    (T STANDARD-UPDATING-OUTPUT-RECORD T)
    (T STRING-DISPLAYED-OUTPUT-RECORD T)
    (T POLYGON-DISPLAYED-OUTPUT-RECORD T)
    (T ELLIPSE-DISPLAYED-OUTPUT-RECORD T)
    (T LINE-DISPLAYED-OUTPUT-RECORD T)
    (T ACCEPT-VALUES-OUTPUT-RECORD T)
    (T STANDARD-ROW-OUTPUT-RECORD T)
    (T STANDARD-TABLE-OUTPUT-RECORD T)
    (T BORDER-OUTPUT-RECORD T))
  (MAP-OVER-ROW-CELLS (T STANDARD-ROW-OUTPUT-RECORD))
  (MAP-OVER-TABLE-ELEMENTS (T STANDARD-ITEM-LIST-OUTPUT-RECORD T)
                           (T STANDARD-PRESENTATION T)
                           (T STANDARD-UPDATING-OUTPUT-RECORD T)
                           (T STANDARD-TABLE-OUTPUT-RECORD T)
                           (T STANDARD-SEQUENCE-OUTPUT-RECORD T)
                           (T STANDARD-ROW-OUTPUT-RECORD T))
  (MAP-OVER-TABLE-ELEMENTS-HELPER (T STANDARD-PRESENTATION T)
                                  (T STANDARD-CELL-OUTPUT-RECORD T)
                                  (T STANDARD-UPDATING-OUTPUT-RECORD T)
                                  (T BORDER-OUTPUT-RECORD T)
                                  (T STANDARD-ROW-OUTPUT-RECORD T))
  (MAP-OVER-TABLE-ROWS (T STANDARD-TABLE-OUTPUT-RECORD))
  (MAP-OVER-TABLE-ROWS-OR-COLUMNS (T STANDARD-TABLE-OUTPUT-RECORD))
  (MATCH-OUTPUT-RECORDS (ACCEPT-VALUES-OUTPUT-RECORD)
			(STANDARD-PRESENTATION)
			(STANDARD-ITEM-LIST-OUTPUT-RECORD)
			(STANDARD-CELL-OUTPUT-RECORD)
			(STANDARD-TABLE-OUTPUT-RECORD)
			(STANDARD-ROW-OUTPUT-RECORD)
			(STANDARD-SEQUENCE-OUTPUT-RECORD))
  (MAYBE-SET-COLOR (POSTSCRIPT-STREAM GRAY-COLOR)
		   (POSTSCRIPT-STREAM (EQL +BACKGROUND-INK+))
		   (POSTSCRIPT-STREAM (EQL +FOREGROUND-INK+)))
  (MEDIUM-BACKGROUND 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-FOREGROUND 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-DEFAULT-TEXT-STYLE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF MEDIUM-DEFAULT-TEXT-STYLE)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-INK 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-LINE-STYLE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-TEXT-STYLE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF MEDIUM-TEXT-STYLE)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-TRANSFORMATION 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  #+Genera (MOUSE-DOCUMENTATION-WINDOW (SHEET-WINDOW-STREAM))
  (NEW-OUTPUT-RECORDS (STANDARD-UPDATING-OUTPUT-RECORD T))
  (NOTIFY-USER-1 #+Genera (SHEET-WINDOW-STREAM T T)
		 #+Minima (CLX-WINDOW T T)
		 #+Cloe-Runtime (CLOE-WINDOW-STREAM T T))
  (OPACITY-VALUE (CLIM-UTILS::EVERYWHERE))
  #+Genera (CLOS-INTERNALS:OPERATION-HANDLED-P (SHEET-WINDOW-STREAM T)
					       (DESIGN T)
					       (FLIPPING-INK T)))

(PREFILL-DISPATCH-CACHES
  (OUTPUT-RECORD-CACHE-VALUE (STANDARD-UPDATING-OUTPUT-RECORD))
  ((SETF OUTPUT-RECORD-CACHE-VALUE) (T STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-CONTENTS-OK (STANDARD-UPDATING-OUTPUT-RECORD)
                             (ACCEPT-VALUES-OUTPUT-RECORD)
                             (STANDARD-PRESENTATION)
                             (STANDARD-TEXT-OUTPUT-RECORD)
			     (STYLED-TEXT-OUTPUT-RECORD)
                             (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                             (STANDARD-CELL-OUTPUT-RECORD))
  (OUTPUT-RECORD-COUNT (STANDARD-CELL-OUTPUT-RECORD)
		       (STANDARD-PRESENTATION)
		       (STANDARD-ITEM-LIST-OUTPUT-RECORD)
		       (STANDARD-SEQUENCE-OUTPUT-RECORD)
		       (STANDARD-TREE-OUTPUT-HISTORY)
		       (STANDARD-UPDATING-OUTPUT-RECORD)
		       (ACCEPT-VALUES-OUTPUT-RECORD)
		       (STANDARD-ROW-OUTPUT-RECORD)
		       (BORDER-OUTPUT-RECORD)
		       (STANDARD-TABLE-OUTPUT-RECORD))
  (OUTPUT-RECORD-CHILDREN (STANDARD-UPDATING-OUTPUT-RECORD)
                          (ACCEPT-VALUES-OUTPUT-RECORD)
                          (STANDARD-PRESENTATION)
                          (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                          (STANDARD-CELL-OUTPUT-RECORD))
  (OUTPUT-RECORD-END-CURSOR-POSITION* (STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-FIXED-POSITION (STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-GENERATION-TICK (STANDARD-UPDATING-OUTPUT-RECORD)
                                 (ACCEPT-VALUES-OUTPUT-RECORD)
                                 (STANDARD-PRESENTATION)
                                 (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                                 (STANDARD-CELL-OUTPUT-RECORD))
  ((SETF OUTPUT-RECORD-GENERATION-TICK)
   (T STANDARD-UPDATING-OUTPUT-RECORD)
   (T ACCEPT-VALUES-OUTPUT-RECORD)
   (T STANDARD-PRESENTATION)
   (T STANDARD-ITEM-LIST-OUTPUT-RECORD)
   (T STANDARD-CELL-OUTPUT-RECORD))
  (OUTPUT-RECORD-OLD-CHILDREN (STANDARD-UPDATING-OUTPUT-RECORD)
                              (STANDARD-PRESENTATION)
                              (ACCEPT-VALUES-OUTPUT-RECORD)
                              (STANDARD-CELL-OUTPUT-RECORD)
                              (STANDARD-ITEM-LIST-OUTPUT-RECORD))
  ((SETF OUTPUT-RECORD-OLD-CHILDREN) (T STANDARD-UPDATING-OUTPUT-RECORD)
				     (T STANDARD-CELL-OUTPUT-RECORD))
  (OUTPUT-RECORD-OLD-BOUNDING-RECTANGLE (STANDARD-UPDATING-OUTPUT-RECORD))
  ((SETF OUTPUT-RECORD-OLD-PARENT) (T STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-OLD-CURSOR-POSITION (STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-OLD-START-CURSOR-POSITION (STANDARD-UPDATING-OUTPUT-RECORD))
  (OUTPUT-RECORD-OLD-START-CURSOR-POSITION* (STANDARD-UPDATING-OUTPUT-RECORD)
					    (ACCEPT-VALUES-OUTPUT-RECORD)
					    (STANDARD-PRESENTATION)
					    (STANDARD-ITEM-LIST-OUTPUT-RECORD)
					    (STANDARD-CELL-OUTPUT-RECORD))
  (OUTPUT-RECORD-PARENT (STANDARD-TEXT-OUTPUT-RECORD)
			(STYLED-TEXT-OUTPUT-RECORD)
                        (STANDARD-CELL-OUTPUT-RECORD)
                        (STANDARD-PRESENTATION)
                        (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                        (STANDARD-SEQUENCE-OUTPUT-RECORD)
                        (STANDARD-TREE-OUTPUT-HISTORY)
                        (STANDARD-UPDATING-OUTPUT-RECORD)
                        (ACCEPT-VALUES-OUTPUT-RECORD)
                        (STANDARD-ROW-OUTPUT-RECORD)
                        (BORDER-OUTPUT-RECORD)
                        (STANDARD-TABLE-OUTPUT-RECORD))
  ((SETF OUTPUT-RECORD-PARENT)
   (T STANDARD-TEXT-OUTPUT-RECORD)
   (T STYLED-TEXT-OUTPUT-RECORD)
   (T STANDARD-CELL-OUTPUT-RECORD)
   (T STANDARD-PRESENTATION)
   (T STANDARD-ITEM-LIST-OUTPUT-RECORD) (T STANDARD-SEQUENCE-OUTPUT-RECORD)
   (T POLYGON-DISPLAYED-OUTPUT-RECORD) (T ELLIPSE-DISPLAYED-OUTPUT-RECORD)
   (T LINE-DISPLAYED-OUTPUT-RECORD) (T RECTANGLE-DISPLAYED-OUTPUT-RECORD)
   (T STRING-DISPLAYED-OUTPUT-RECORD) (T STANDARD-UPDATING-OUTPUT-RECORD) (T ACCEPT-VALUES-OUTPUT-RECORD)
   (T STANDARD-ROW-OUTPUT-RECORD) (T BORDER-OUTPUT-RECORD) (T STANDARD-TABLE-OUTPUT-RECORD))
  (OUTPUT-RECORD-REFINED-SENSITIVITY-TEST (STANDARD-PRESENTATION T T)
					  (STANDARD-TEXT-OUTPUT-RECORD T T)
					  (STYLED-TEXT-OUTPUT-RECORD T T)
					  (LINE-DISPLAYED-OUTPUT-RECORD T T)
					  (STRING-DISPLAYED-OUTPUT-RECORD T T)
					  (RECTANGLE-DISPLAYED-OUTPUT-RECORD T T)
					  (ELLIPSE-DISPLAYED-OUTPUT-RECORD T T)
					  (POLYGON-DISPLAYED-OUTPUT-RECORD T T))
  (OUTPUT-RECORD-SET-END-CURSOR-POSITION* (STANDARD-CELL-OUTPUT-RECORD T T)
					  (STANDARD-PRESENTATION T T)
					  (STANDARD-ITEM-LIST-OUTPUT-RECORD T T)
					  (STANDARD-SEQUENCE-OUTPUT-RECORD T T)
					  (STANDARD-UPDATING-OUTPUT-RECORD T T)
					  (ACCEPT-VALUES-OUTPUT-RECORD T T)
					  (STANDARD-TREE-OUTPUT-HISTORY T T)
					  (STANDARD-ROW-OUTPUT-RECORD T T)
					  (BORDER-OUTPUT-RECORD T T)
					  (STANDARD-TABLE-OUTPUT-RECORD T T))
  (OUTPUT-RECORD-SET-OLD-START-CURSOR-POSITION* (STANDARD-UPDATING-OUTPUT-RECORD T T)
						(ACCEPT-VALUES-OUTPUT-RECORD T T)
						(STANDARD-PRESENTATION T T)
						(STANDARD-ITEM-LIST-OUTPUT-RECORD T T)
						(STANDARD-CELL-OUTPUT-RECORD T T))
  (OUTPUT-RECORD-SET-START-CURSOR-POSITION* (STANDARD-SEQUENCE-OUTPUT-RECORD T T)
					    (STANDARD-ITEM-LIST-OUTPUT-RECORD T T)
					    (STANDARD-PRESENTATION T T)
					    (STANDARD-CELL-OUTPUT-RECORD T T)
					    (STANDARD-TEXT-OUTPUT-RECORD T T)
					    (STYLED-TEXT-OUTPUT-RECORD T T)
					    (STANDARD-UPDATING-OUTPUT-RECORD T T)
					    (ACCEPT-VALUES-OUTPUT-RECORD T T)
					    (STANDARD-TABLE-OUTPUT-RECORD T T)
					    (BORDER-OUTPUT-RECORD T T)
					    (STANDARD-ROW-OUTPUT-RECORD T T))
  (OUTPUT-RECORD-START-CURSOR-POSITION (STANDARD-TREE-OUTPUT-HISTORY))
  (OUTPUT-RECORD-START-CURSOR-POSITION* (STANDARD-CELL-OUTPUT-RECORD)
					(STANDARD-PRESENTATION)
					(STANDARD-ITEM-LIST-OUTPUT-RECORD)
					(STANDARD-SEQUENCE-OUTPUT-RECORD)
					(STANDARD-TREE-OUTPUT-HISTORY)
					(STANDARD-TEXT-OUTPUT-RECORD)
					(STYLED-TEXT-OUTPUT-RECORD)
					(STRING-DISPLAYED-OUTPUT-RECORD)
					(POLYGON-DISPLAYED-OUTPUT-RECORD)
					(ELLIPSE-DISPLAYED-OUTPUT-RECORD)
					(LINE-DISPLAYED-OUTPUT-RECORD)
					(STANDARD-UPDATING-OUTPUT-RECORD)
					(ACCEPT-VALUES-OUTPUT-RECORD)
					(STANDARD-ROW-OUTPUT-RECORD)
					(BORDER-OUTPUT-RECORD)
					(STANDARD-TABLE-OUTPUT-RECORD))
  (OUTPUT-RECORD-UNIQUE-ID (STANDARD-UPDATING-OUTPUT-RECORD)
			   (STANDARD-TEXT-OUTPUT-RECORD)
			   (STYLED-TEXT-OUTPUT-RECORD))
  (STREAM-CURRENT-OUTPUT-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-CURRENT-OUTPUT-RECORD)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-HIGHLIGHTED-PRESENTATION)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-OUTPUT-HISTORY
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-OUTPUT-HISTORY)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-OUTPUT-HISTORY-POSITION
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (OUTPUT-RECORDING-STREAM-P
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-CURRENT-REDISPLAY-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-CURRENT-REDISPLAY-RECORD)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-REPLAY
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-TEXT-OUTPUT-RECORD
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-TEXT-OUTPUT-RECORD)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (OUTPUT-STREAM-P 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (POINT-POSITION* (STANDARD-POINT))
  (POINT-X (STANDARD-POINT))
  ((SETF POINT-X) (T STANDARD-POINT))
  (POINT-Y (STANDARD-POINT))
  ((SETF POINT-Y) (T STANDARD-POINT)))

(PREFILL-DISPATCH-CACHES
  (POINTER-MOTION-PENDING 
    (#+Genera SHEET-WINDOW-STREAM #+Cloe-Runtime CLOE-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF POINTER-MOTION-PENDING)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (PREPARE-TEXT-RECORD-FOR-APPENDING (STANDARD-TEXT-OUTPUT-RECORD T T)
				     (STYLED-TEXT-OUTPUT-RECORD T T))
  (PRESENTATION-OBJECT (STANDARD-PRESENTATION))
  ((SETF PRESENTATION-OBJECT) (T STANDARD-PRESENTATION))
  (PRESENTATION-SINGLE-BOX (STANDARD-PRESENTATION))
  (PRESENTATION-TYPE (STANDARD-PRESENTATION))
  #+Genera (PRINT-OBJECT (FLIPPING-INK T)
			 ((EQL +FOREGROUND-INK+) T)
			 ((EQL +BACKGROUND-INK+) T))
  #+Genera (CLOS-INTERNALS::PRINT-SELF (DESIGN T T T) (FLIPPING-INK T T T))
  (PROMPT-FOR-ACCEPT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (PROPAGATE-INFERIOR-OUTPUT-RECORD-CHANGES-P (STANDARD-TREE-OUTPUT-HISTORY T T))
  (RECOMPUTE-CONTENTS-OK (STANDARD-TEXT-OUTPUT-RECORD)
			 (STYLED-TEXT-OUTPUT-RECORD)
			 (STANDARD-PRESENTATION)
			 (ACCEPT-VALUES-OUTPUT-RECORD)
			 (STANDARD-CELL-OUTPUT-RECORD)
			 (STANDARD-ITEM-LIST-OUTPUT-RECORD)
			 (STANDARD-UPDATING-OUTPUT-RECORD)
			 (STANDARD-ROW-OUTPUT-RECORD)
			 (STANDARD-TABLE-OUTPUT-RECORD)
			 (STANDARD-SEQUENCE-OUTPUT-RECORD))
  (RECOMPUTE-EXTENT (STANDARD-SEQUENCE-OUTPUT-RECORD)
		    (STANDARD-TREE-OUTPUT-HISTORY)
		    (STANDARD-UPDATING-OUTPUT-RECORD)
		    (STANDARD-TABLE-OUTPUT-RECORD)
		    (ACCEPT-VALUES-OUTPUT-RECORD)
		    (STANDARD-CELL-OUTPUT-RECORD)
		    (STANDARD-ROW-OUTPUT-RECORD)
		    (STANDARD-PRESENTATION))
  (RECOMPUTE-EXTENT-FOR-CHANGED-CHILD (STANDARD-SEQUENCE-OUTPUT-RECORD T T T T T)
				      (STANDARD-TREE-OUTPUT-HISTORY T T T T T)
				      (STANDARD-UPDATING-OUTPUT-RECORD T T T T T)
				      (ACCEPT-VALUES-OUTPUT-RECORD T T T T T)
				      (STANDARD-TABLE-OUTPUT-RECORD T T T T T)
				      (STANDARD-CELL-OUTPUT-RECORD T T T T T)
				      (STANDARD-ROW-OUTPUT-RECORD T T T T T)
				      (STANDARD-PRESENTATION T T T T T))
  (RECOMPUTE-EXTENT-FOR-NEW-CHILD (STANDARD-CELL-OUTPUT-RECORD T)
				  (STANDARD-PRESENTATION T)
				  (STANDARD-ITEM-LIST-OUTPUT-RECORD T)
				  (STANDARD-SEQUENCE-OUTPUT-RECORD T)
				  (STANDARD-TREE-OUTPUT-HISTORY T)
				  (STANDARD-UPDATING-OUTPUT-RECORD T)
				  (ACCEPT-VALUES-OUTPUT-RECORD T)
				  (STANDARD-ROW-OUTPUT-RECORD T)
				  (STANDARD-TABLE-OUTPUT-RECORD T))
  (RECOMPUTE-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T T T T T T T T))
  (REDISPLAY-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T))
  (REDISPLAY-DECORATIONS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (REGION-CONTAINS-POINT*-P (STANDARD-PRESENTATION T T)
                            (STANDARD-TEXT-OUTPUT-RECORD T T)
			    (STYLED-TEXT-OUTPUT-RECORD T T)
                            (LINE-DISPLAYED-OUTPUT-RECORD T T))
  (REGION-INTERSECTS-REGION-P (POLYGON-DISPLAYED-OUTPUT-RECORD RECTANGLE-DISPLAYED-OUTPUT-RECORD)
                              (POLYGON-DISPLAYED-OUTPUT-RECORD POLYGON-DISPLAYED-OUTPUT-RECORD)
                              (ELLIPSE-DISPLAYED-OUTPUT-RECORD ELLIPSE-DISPLAYED-OUTPUT-RECORD)
                              (ELLIPSE-DISPLAYED-OUTPUT-RECORD POLYGON-DISPLAYED-OUTPUT-RECORD)
                              (STANDARD-PRESENTATION STANDARD-PRESENTATION)
                              (STANDARD-PRESENTATION POLYGON-DISPLAYED-OUTPUT-RECORD)
                              (LINE-DISPLAYED-OUTPUT-RECORD LINE-DISPLAYED-OUTPUT-RECORD)
                              (LINE-DISPLAYED-OUTPUT-RECORD ELLIPSE-DISPLAYED-OUTPUT-RECORD)
                              (RECTANGLE-DISPLAYED-OUTPUT-RECORD POLYGON-DISPLAYED-OUTPUT-RECORD)
                              (RECTANGLE-DISPLAYED-OUTPUT-RECORD RECTANGLE-DISPLAYED-OUTPUT-RECORD)
                              (STANDARD-SEQUENCE-OUTPUT-RECORD STANDARD-UPDATING-OUTPUT-RECORD))
  (REPLAY-OUTPUT-RECORD (STANDARD-TREE-OUTPUT-HISTORY T)
			(STANDARD-SEQUENCE-OUTPUT-RECORD T)
			(STANDARD-ITEM-LIST-OUTPUT-RECORD T)
			(STANDARD-PRESENTATION T)
			(STANDARD-CELL-OUTPUT-RECORD T)
			(STANDARD-TEXT-OUTPUT-RECORD T)
			(STYLED-TEXT-OUTPUT-RECORD T)
			(ELLIPSE-DISPLAYED-OUTPUT-RECORD T)
			(LINE-DISPLAYED-OUTPUT-RECORD T)
			(POLYGON-DISPLAYED-OUTPUT-RECORD T)
			(RECTANGLE-DISPLAYED-OUTPUT-RECORD T)
			(STRING-DISPLAYED-OUTPUT-RECORD T)
			(STANDARD-UPDATING-OUTPUT-RECORD T)
			(ACCEPT-VALUES-OUTPUT-RECORD T)
			(STANDARD-TABLE-OUTPUT-RECORD T)
			(BORDER-OUTPUT-RECORD T)
			(STANDARD-ROW-OUTPUT-RECORD T))
  (REPOSITION-OUTPUT-RECORD (STANDARD-UPDATING-OUTPUT-RECORD T T T T T))
  (ROW-TABLE-P (STANDARD-TABLE-OUTPUT-RECORD))
  #+Genera (CLOS-INTERNALS::SEND-IF-HANDLES (SHEET-WINDOW-STREAM T))
  (OUTPUT-RECORD-SET-POSITION* (STANDARD-TREE-OUTPUT-HISTORY T T)
                               (STANDARD-CELL-OUTPUT-RECORD T T))
  (SET-POINTER-WINDOW-AND-LOCATION
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  #+Genera (SET-STREAM-POINTER-IN-SCREEN-COORDINATES (SHEET-WINDOW-STREAM T T T))
  (SHARED-INITIALIZE #+Cloe-Runtime (CLOE-ROOT-WINDOW T) 
		     #+Cloe-Runtime (CLOE-WINDOW-STREAM T)
		     #+Genera (SHEET-WINDOW-STREAM T)
		     #+Minima (CLX-WINDOW T)
		     (ACCEPT-VALUES-OUTPUT-RECORD T))
  #+Genera (SHEET-DECODE-COLOR (GRAY-COLOR T)
			       (RGB-COLOR T))
  #+Genera (SHEET-DECODE-INK (FLIPPING-INK T)
			     (GRAY-COLOR T)
			     (RGB-COLOR T)
			     (CONTRASTING-INK T)
			     (RECTANGULAR-TILE T)
			     (PATTERN T))
  #+Genera (SHEET-DECODE-PATTERN (PATTERN T))
  (STREAM-ADVANCE-CURSOR-LINE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-BASELINE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-BASELINE)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-CHARACTER-SIZE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-CHARACTER-WIDTH
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-CLEAR-INPUT
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  #+Genera (STREAM-COMPATIBLE-CURSOR-POSITION* (SHEET-WINDOW-STREAM))
  #+Genera (STREAM-COMPATIBLE-OUTPUT-AS-PRESENTATION-1 (SHEET-WINDOW-STREAM T T))
  #+Genera (STREAM-COMPATIBLE-READ-CHAR (SHEET-WINDOW-STREAM))
  #+Genera (STREAM-COMPATIBLE-SIZE-IN-CHARACTERS (SHEET-WINDOW-STREAM))
  (STREAM-CURRENT-LINE-HEIGHT
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-CURRENT-LINE-HEIGHT)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-CURSOR-POSITION* #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
			   #+Cloe-Runtime (CLOE-WINDOW-STREAM)
			   #+Genera (SHEET-WINDOW-STREAM)
			   #+Minima (CLX-WINDOW)) 
  (STREAM-DEFAULT-TEXT-MARGIN
    #+Cloe-Runtime (CLOE-ROOT-WINDOW)
    #+Cloe-Runtime (CLOE-WINDOW-STREAM)
    #+Genera (SHEET-WINDOW-STREAM)
    #+Minima (CLX-WINDOW))
  ((SETF STREAM-DEFAULT-TEXT-MARGIN)
   #+Cloe-Runtime (T CLOE-ROOT-WINDOW) 
   #+Cloe-Runtime (T CLOE-WINDOW-STREAM)
   #+Genera (T SHEET-WINDOW-STREAM)
   #+Minima (T CLX-WINDOW))
  (STREAM-DEFAULT-VIEW
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-DEFAULT-VIEW)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-DRAWING-P
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-DRAWING-P)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-END-OF-LINE-ACTION
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-END-OF-LINE-ACTION)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-END-OF-PAGE-ACTION
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-END-OF-PAGE-ACTION)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW)))

(PREFILL-DISPATCH-CACHES
  (STREAM-ENSURE-CURSOR-VISIBLE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-EVENT-HANDLER #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
			#+Cloe-Runtime (CLOE-WINDOW-STREAM)
			#+Genera (SHEET-WINDOW-STREAM)
			#+Minima (CLX-WINDOW))
  (STREAM-FINISH-OUTPUT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-FORCE-OUTPUT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-FRESH-LINE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-GLYPH-FOR-CHARACTER
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (STREAM-HANDLE-LINE-WRAP
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (STREAM-INPUT-BUFFER 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-INPUT-WAIT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-LINE-HEIGHT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-MERGED-TEXT-STYLE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (MEDIUM-MERGED-TEXT-STYLE-VALID
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF MEDIUM-MERGED-TEXT-STYLE-VALID)
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-MOVE-FOR-LINE-HEIGHT-CHANGE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T))
  (STREAM-NOTE-LINE-HEIGHT-CHANGE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (STREAM-NOTE-POINTER-BUTTON-PRESS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (STREAM-OUTPUT-GLYPH-BUFFER 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-POINTER-POSITION* 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-POINTERS #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		   #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		   #+Genera (SHEET-WINDOW-STREAM)
		   #+Minima (CLX-WINDOW)) 
  ((SETF STREAM-POINTERS) #+Cloe-Runtime (T CLOE-ROOT-WINDOW)
			  #+Genera (T SHEET-WINDOW-STREAM)
			  #+Minima (T CLX-WINDOW)) 
  (STREAM-PRIMARY-POINTER #+Cloe-Runtime (CLOE-ROOT-WINDOW)
			  #+Cloe-Runtime (CLOE-WINDOW-STREAM)
			  #+Genera (SHEET-WINDOW-STREAM)
			  #+Minima (CLX-WINDOW)) 
  (STREAM-READ-CHAR 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-READ-GESTURE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-RECORDING-P 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-RECORDING-P) 
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (REDISPLAYABLE-STREAM-P 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-REDISPLAYING-P 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF STREAM-REDISPLAYING-P) 
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-RESTORE-INPUT-FOCUS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-SCAN-CHARACTER-FOR-WRITING 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T))
  (STREAM-SCAN-STRING-FOR-WRITING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T))
  (STREAM-SET-CURSOR-POSITION*
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (STREAM-SET-CURSOR-POSITION*-INTERNAL
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (STREAM-SET-INPUT-FOCUS
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-SET-POINTER-POSITION*
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (STREAM-STRING-OUTPUT-SIZE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-STRING-WIDTH
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-SUPPORTS-INPUT-EDITING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-TEXT-CURSOR
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-TEXT-MARGIN
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-UNREAD-GESTURE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-VERTICAL-SPACING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (STREAM-WRITE-CHAR
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-WRITE-CHAR-1
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T))
  (STREAM-WRITE-STRING
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (STREAM-WRITE-STRING-1
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T))
  (TREE-RECOMPUTE-EXTENT-1 (STANDARD-ITEM-LIST-OUTPUT-RECORD)
                           (STANDARD-PRESENTATION)
                           (STANDARD-CELL-OUTPUT-RECORD)
                           (STANDARD-UPDATING-OUTPUT-RECORD)
                           (STANDARD-TABLE-OUTPUT-RECORD)
                           (BORDER-OUTPUT-RECORD)
                           (STANDARD-SEQUENCE-OUTPUT-RECORD)
                           (STANDARD-ROW-OUTPUT-RECORD)
                           (LINE-DISPLAYED-OUTPUT-RECORD))
  (VIEWPORT-TO-DRAWING-SURFACE-COORDINATES 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  #+Genera (CLOS-INTERNALS::WHICH-OPERATIONS (DESIGN) (FLIPPING-INK)))

(PREFILL-DISPATCH-CACHES
  (WINDOW-BEEP 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-CHILDREN #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		   #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		   #+Genera (SHEET-WINDOW-STREAM)
		   #+Minima (CLX-WINDOW)) 
  ((SETF WINDOW-CHILDREN) #+Cloe-Runtime (T CLOE-ROOT-WINDOW) 
			  #+Cloe-Runtime (T CLOE-WINDOW-STREAM)
			  #+Genera (T SHEET-WINDOW-STREAM)
			  #+Minima (T CLX-WINDOW))
  (WINDOW-CLEAR 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-CLEAR-AREA 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T))
  (WINDOW-ERASE-VIEWPORT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-EXPOSE
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-FLUSH-UPDATE-REGION 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-INSIDE-EDGES #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		       #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		       #+Genera (SHEET-WINDOW-STREAM)
		       #+Minima (CLX-WINDOW)) 
  (WINDOW-INSIDE-SIZE #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		      #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		      #+Genera (SHEET-WINDOW-STREAM)
		      #+Minima (CLX-WINDOW))
  (WINDOW-INSIDE-WIDTH 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-LABEL 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF WINDOW-LABEL) 
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-LABEL-SIZE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-MARGINS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-PARENT #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
		 #+Cloe-Runtime (CLOE-WINDOW-STREAM)
		 #+Genera (SHEET-WINDOW-STREAM)
		 #+Minima (CLX-WINDOW))
  (WINDOW-PROCESS-UPDATE-REGION 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-SET-VIEWPORT-POSITION* 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T))
  (WINDOW-MODIFIER-STATE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-SHIFT-VISIBLE-REGION 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T T T T T T))
  (WINDOW-STACK-ON-TOP 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-STREAM-CLASS-NAME #+Cloe-Runtime (CLOE-ROOT-WINDOW) 
			    #+Cloe-Runtime (CLOE-WINDOW-STREAM)
			    #+Genera (SHEET-WINDOW-STREAM)
			    #+Minima (CLX-WINDOW))
  (WINDOW-VIEWPORT 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-VIEWPORT-POSITION* 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (WINDOW-VISIBILITY 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  ((SETF WINDOW-VISIBILITY) 
   (T #+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW))
  (INVOKE-WITH-CLIPPING-REGION 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW
     T STANDARD-BOUNDING-RECTANGLE))
  (INVOKE-WITH-DRAWING-OPTIONS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T))
  (INVOKE-WITH-OUTPUT-RECORDING-OPTIONS 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T))
  (INVOKE-WITH-TEXT-STYLE 
    (#+Cloe-Runtime CLOE-WINDOW-STREAM #+Genera SHEET-WINDOW-STREAM #+Minima CLX-WINDOW T T T)))


;;; (generate-prefill-dispatch-caches 'line-style)

(PREFILL-DISPATCH-CACHES (LINE-STYLE-CAP-SHAPE (STANDARD-LINE-STYLE)) 
                         (LINE-STYLE-DASHES (STANDARD-LINE-STYLE)) 
                         (LINE-STYLE-JOINT-SHAPE (STANDARD-LINE-STYLE)) 
                         (LINE-STYLE-THICKNESS (STANDARD-LINE-STYLE)) 
                         (LINE-STYLE-UNIT (STANDARD-LINE-STYLE)))


;;; (generate-prefill-dispatch-caches 'text-style)

(PREFILL-DISPATCH-CACHES
  (MERGE-TEXT-STYLES (TEXT-STYLE TEXT-STYLE) 
		     (TEXT-STYLE CONS) 
		     (CONS TEXT-STYLE)) 
  (PARSE-TEXT-STYLE (TEXT-STYLE)) 
  (TEXT-STYLE-COMPONENTS (TEXT-STYLE)) 
  (TEXT-STYLE-INDEX (TEXT-STYLE)) 
  (TEXT-STYLE-MAPPING
    (#+Cloe-Runtime CLOE-DEVICE #+Genera SHEET-DEVICE #+Minima CLX-DISPLAY-DEVICE TEXT-STYLE)))


;;; (generate-prefill-dispatch-caches 'device-font)

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches 'fundamental-stream)
;;; Window stuff has been removed by hand since it duplicates earlier entries

(PREFILL-DISPATCH-CACHES
  (STREAM-ACCEPT (STANDARD-INPUT-EDITING-STREAM T)
		 (ACCEPT-VALUES-STREAM T)) 
  (STREAM-CLOSE-TEXT-OUTPUT-RECORD (STANDARD-INPUT-EDITING-STREAM)
				   (ACCEPT-VALUES-STREAM)) 
  (DECODE-STREAM-FOR-WRITING (STANDARD-INPUT-EDITING-STREAM)) 
  (DO-INPUT-BUFFER-SCREEN-REAL-ESTATE (STANDARD-INPUT-EDITING-STREAM T)) 
  (ERASE-INPUT-BUFFER (STANDARD-INPUT-EDITING-STREAM)) 
  (EXTENDED-OUTPUT-STREAM-P (ACCEPT-VALUES-STREAM)) 
  (FIND-OR-ADD-QUERY (ACCEPT-VALUES-STREAM T T T T T))
  (INVOKE-FORMATTING-CELL (ACCEPT-VALUES-STREAM T)
			  (STANDARD-INPUT-EDITING-STREAM T)) 
  (INITIALIZE-INPUT-EDITING-STREAM (STANDARD-INPUT-EDITING-STREAM)) 
  (INITIALIZE-POSITION (STANDARD-INPUT-EDITING-STREAM)) 
  (INPUT-BUFFER-INPUT-POSITION->CURSOR-POSITION* (STANDARD-INPUT-EDITING-STREAM)) 
  (INPUT-EDITOR-BUFFER (STANDARD-INPUT-EDITING-STREAM)) 
  (INPUT-POSITION (STANDARD-INPUT-EDITING-STREAM)) 
  ((SETF INPUT-POSITION) (T STANDARD-INPUT-EDITING-STREAM)) 
  (INSERTION-POINTER (STANDARD-INPUT-EDITING-STREAM)) 
  ((SETF INSERTION-POINTER) (T STANDARD-INPUT-EDITING-STREAM)) 
  (INPUT-EDITING-STREAM-P (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-PROCESS-GESTURE (STANDARD-INPUT-EDITING-STREAM T T)) 
  #+Genera (CLOS-INTERNALS:OPERATION-HANDLED-P (STANDARD-INPUT-EDITING-STREAM T)
					       (ACCEPT-VALUES-STREAM T))
  ((SETF ORIGINAL-STREAM-RECORDING-P) (T STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-CURRENT-OUTPUT-RECORD (STANDARD-INPUT-EDITING-STREAM)
				(ACCEPT-VALUES-STREAM)) 
  ((SETF STREAM-CURRENT-OUTPUT-RECORD) (T STANDARD-INPUT-EDITING-STREAM)
   (T ACCEPT-VALUES-STREAM)) 
  (STREAM-OUTPUT-HISTORY (STANDARD-INPUT-EDITING-STREAM)
			 (ACCEPT-VALUES-STREAM)) 
  (STREAM-OUTPUT-HISTORY-POSITION (STANDARD-INPUT-EDITING-STREAM)
				  (ACCEPT-VALUES-STREAM)) 
  (STREAM-CURRENT-REDISPLAY-RECORD (ACCEPT-VALUES-STREAM))
  ((SETF STREAM-CURRENT-REDISPLAY-RECORD) (T ACCEPT-VALUES-STREAM))
  (STREAM-REPLAY (ACCEPT-VALUES-STREAM)
		 (STANDARD-INPUT-EDITING-STREAM)) 
  (PRESENTATION-REPLACE-INPUT (STANDARD-INPUT-EDITING-STREAM T T)) 
  (PROMPT-FOR-ACCEPT (STANDARD-INPUT-EDITING-STREAM T T)
		     (ACCEPT-VALUES-STREAM T T)) 
  (REDRAW-INPUT-BUFFER (STANDARD-INPUT-EDITING-STREAM)) 
  (REMOVE-ACTIVATION-GESTURE (STANDARD-INPUT-EDITING-STREAM)) 
  (REPLACE-INPUT (STANDARD-INPUT-EDITING-STREAM T)) 
  (RESCAN-IF-NECESSARY (STANDARD-INPUT-EDITING-STREAM)) 
  (RESCANNING-P (STANDARD-INPUT-EDITING-STREAM)) 
  (RESET-CURSOR-POSITION (STANDARD-INPUT-EDITING-STREAM)) 
  (RESET-SCAN-POINTER (STANDARD-INPUT-EDITING-STREAM)) 
  #+Genera (CLOS-INTERNALS::SEND-IF-HANDLES (STANDARD-INPUT-EDITING-STREAM T)
					    (ACCEPT-VALUES-STREAM T))
  #+Genera (STREAM-COMPATIBLE-OUTPUT-AS-PRESENTATION-1 (STANDARD-INPUT-EDITING-STREAM T T))
  #+Genera (STREAM-COMPATIBLE-READ-CHAR (STANDARD-INPUT-EDITING-STREAM))
  (START-CURSOR-POSITION* (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-DEFAULT-VIEW (STANDARD-INPUT-EDITING-STREAM)
		       (ACCEPT-VALUES-STREAM)) 
  ((SETF STREAM-DEFAULT-VIEW) (T ACCEPT-VALUES-STREAM)) 
  (STREAM-DRAWING-P (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-END-OF-LINE-ACTION (ACCEPT-VALUES-STREAM)
			     (STANDARD-INPUT-EDITING-STREAM)) 
  ((SETF STREAM-END-OF-LINE-ACTION) (T ACCEPT-VALUES-STREAM)
				    (T STANDARD-INPUT-EDITING-STREAM))
  (STREAM-END-OF-PAGE-ACTION (ACCEPT-VALUES-STREAM)
			     (STANDARD-INPUT-EDITING-STREAM))
  ((SETF STREAM-END-OF-PAGE-ACTION) (T ACCEPT-VALUES-STREAM)
				    (T STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-FRESH-LINE (STANDARD-INPUT-EDITING-STREAM)
		     (ACCEPT-VALUES-STREAM)) 
  (STREAM-READ-CHAR (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-READ-GESTURE (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-RECORDING-P (STANDARD-INPUT-EDITING-STREAM)
		      (ACCEPT-VALUES-STREAM)) 
  (STREAM-REDISPLAYING-P (STANDARD-INPUT-EDITING-STREAM)
			 (ACCEPT-VALUES-STREAM)) 
  ((SETF STREAM-REDISPLAYING-P) (T ACCEPT-VALUES-STREAM))
  (STREAM-SET-CURSOR-POSITION* (ACCEPT-VALUES-STREAM T T)
			       (STANDARD-INPUT-EDITING-STREAM T T)) 
  (STREAM-STRING-WIDTH (ACCEPT-VALUES-STREAM T)
		       (STANDARD-INPUT-EDITING-STREAM T)) 
  (STREAM-TERPRI (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-UNREAD-GESTURE (STANDARD-INPUT-EDITING-STREAM T)) 
  (STREAM-VERTICAL-SPACING (ACCEPT-VALUES-STREAM)
			   (STANDARD-INPUT-EDITING-STREAM)) 
  (STREAM-WRITE-CHAR (STANDARD-INPUT-EDITING-STREAM T)
		     (ACCEPT-VALUES-STREAM T)) 
  (STREAM-WRITE-STRING (STANDARD-INPUT-EDITING-STREAM T)
		       (ACCEPT-VALUES-STREAM T)) 
  #+Genera (CLOS-INTERNALS::WHICH-OPERATIONS (STANDARD-INPUT-EDITING-STREAM) (ACCEPT-VALUES-STREAM))
  (WINDOW-BEEP (STANDARD-INPUT-EDITING-STREAM)) 
  (WINDOW-INSIDE-SIZE (STANDARD-INPUT-EDITING-STREAM)) 
  (INVOKE-WITH-INPUT-EDITOR-TYPEOUT (STANDARD-INPUT-EDITING-STREAM T)) 
  (INVOKE-WITH-OUTPUT-RECORDING-OPTIONS (STANDARD-INPUT-EDITING-STREAM T T T)
					(ACCEPT-VALUES-STREAM T T T)) 
  (INVOKE-WITH-TEXT-STYLE (STANDARD-INPUT-EDITING-STREAM T T T)
			  (ACCEPT-VALUES-STREAM T T T)))


;;; (generate-prefill-dispatch-caches 'pointer)

(PREFILL-DISPATCH-CACHES
  #+Genera ((SETF POINTER-BUTTON-STATE) (T POINTER))
  (POINTER-POSITION* (POINTER))
  #+Genera ((SETF POINTER-POSITION-CHANGED) (T POINTER))
  (POINTER-SET-POSITION* (POINTER T T))
  (POINTER-WINDOW (POINTER))
  ((SETF POINTER-WINDOW) (T POINTER))
  #+Genera (POINTER-X-POSITION (POINTER))
  #+Genera (POINTER-Y-POSITION (POINTER))
  (QUERY-POINTER (POINTER)))


;;; (generate-prefill-dispatch-caches 'console)

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches 'device-event)

(PREFILL-DISPATCH-CACHES
  (EVENT-SHEET (POINTER-BUTTON-PRESS-EVENT POINTER-BUTTON-RELEASE-EVENT))
  (EVENT-MODIFIER-STATE (POINTER-BUTTON-PRESS-EVENT POINTER-BUTTON-RELEASE-EVENT))
  (POINTER-EVENT-BUTTON (POINTER-BUTTON-PRESS-EVENT POINTER-BUTTON-RELEASE-EVENT))
  (POINTER-EVENT-X (POINTER-BUTTON-PRESS-EVENT POINTER-BUTTON-RELEASE-EVENT))
  (POINTER-EVENT-Y (POINTER-BUTTON-PRESS-EVENT POINTER-BUTTON-RELEASE-EVENT)))


;;; (generate-prefill-dispatch-caches 'basic-view)

(PREFILL-DISPATCH-CACHES
  (ACCEPT-METHOD
    ((PRESENTATION-TYPE COMMAND-OR-FORM) T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE FORM) T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE OR) T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMMAND) T T T T TEXTUAL-DIALOG-VIEW)
    ((PRESENTATION-TYPE COMMAND) T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMMAND-NAME) T T T T TEXTUAL-VIEW)) 
  (ACCEPT-PRESENT-DEFAULT-METHOD
    ((PRESENTATION-TYPE COMPLETION) T T T T TEXTUAL-DIALOG-VIEW T T T T))
  (PRESENT-METHOD
    ((PRESENTATION-TYPE EXPRESSION) T T T T T TEXTUAL-MENU-VIEW)
    ((PRESENTATION-TYPE EXPRESSION) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE FORM) T T T T T TEXTUAL-MENU-VIEW)
    ((PRESENTATION-TYPE FORM) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMMAND-MENU-ELEMENT) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMMAND-NAME) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMMAND) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE OR) T T T T T TEXTUAL-DIALOG-VIEW)
    ((PRESENTATION-TYPE OR) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE COMPLETION) T T T T T TEXTUAL-DIALOG-VIEW)
    ((PRESENTATION-TYPE COMPLETION) T T T T T TEXTUAL-VIEW)
    ((PRESENTATION-TYPE NULL) T T T T T TEXTUAL-VIEW)))


;;; (generate-prefill-dispatch-caches 'standard-application-frame)

(PREFILL-DISPATCH-CACHES 
  (DISPLAY-EXIT-BOXES (ACCEPT-VALUES T))
  (EXECUTE-FRAME-COMMAND (ACCEPT-VALUES T))
  (FRAME-COMMAND-TABLE (DEFAULT-APPLICATION)
		       (ACCEPT-VALUES)) 
  (FRAME-DOCUMENT-HIGHLIGHTED-PRESENTATION (ACCEPT-VALUES T T T T T T))
  (FRAME-FIND-INNERMOST-APPLICABLE-PRESENTATION (DEFAULT-APPLICATION T T T T)
						(ACCEPT-VALUES T T T T)) 
  (FRAME-INPUT-CONTEXT-BUTTON-PRESS-HANDLER (DEFAULT-APPLICATION T T)
					    (ACCEPT-VALUES T T)) 
  (FRAME-NAME (ACCEPT-VALUES)) 
  (FRAME-POINTER-DOCUMENTATION-OUTPUT (ACCEPT-VALUES)) 
  (FRAME-REPLAY (DEFAULT-APPLICATION T)
		(ACCEPT-VALUES T)) 
  (FRAME-TOP-LEVEL-SHEET (ACCEPT-VALUES)) 
  (INITIALIZE-INSTANCE (DEFAULT-APPLICATION)
		       (ACCEPT-VALUES)) 
  (LAYOUT-FRAME-PANES (ACCEPT-VALUES T)) 
  (RUN-FRAME-TOP-LEVEL (ACCEPT-VALUES)) 
  (SHARED-INITIALIZE (DEFAULT-APPLICATION T)
		     (ACCEPT-VALUES T)))


;;; (generate-prefill-dispatch-caches 'command-table)

(PREFILL-DISPATCH-CACHES 
  (COMMAND-PRESENT-IN-COMMAND-TABLE-P (T STANDARD-COMMAND-TABLE)) 
  (COMMAND-TABLE-INHERIT-FROM (STANDARD-COMMAND-TABLE)) 
  (COMMAND-TABLE-NAME (STANDARD-COMMAND-TABLE)))


;;; (generate-prefill-dispatch-caches 'noise-string)

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches 'display-device)

(PREFILL-DISPATCH-CACHES
  ((SETF TEXT-STYLE-MAPPING) #+Cloe-Runtime (T CLOE-DEVICE T) 
			     #+Genera (T SHEET-DEVICE T)
			     #+Minima (T CLX-DISPLAY-DEVICE T)
			     (T POSTSCRIPT-DEVICE T))
  (DISPLAY-DEVICE-NAME #+Cloe-Runtime (CLOE-DEVICE)
		       #+Genera (SHEET-DEVICE)
		       #+Minima (CLX-DISPLAY-DEVICE)
		       (POSTSCRIPT-DEVICE)) 
  (STANDARDIZE-TEXT-STYLE #+Cloe-Runtime (CLOE-DEVICE T) 
			  #+Genera (SHEET-DEVICE T)
			  #+Minima (CLX-DISPLAY-DEVICE T)
			  (POSTSCRIPT-DEVICE T)) 
  (TEXT-STYLE-MAPPING #+Cloe-Runtime (CLOE-DEVICE TEXT-STYLE)
		      #+Genera (SHEET-DEVICE TEXT-STYLE)
		      #+Minima (CLX-DISPLAY-DEVICE TEXT-STYLE)
		      #+Genera (SHEET-DEVICE CONS)) 
  (TEXT-STYLE-MAPPING* #+Cloe-Runtime (CLOE-DEVICE T)
		       #+Genera (SHEET-DEVICE T)
		       #+Minima (CLX-DISPLAY-DEVICE T)))


;;; (generate-prefill-dispatch-caches 'io-buffer)

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches 'queue)

(PREFILL-DISPATCH-CACHES (QUEUE-EMPTY-P (QUEUE)) 
                         (QUEUE-FLUSH (QUEUE)) 
                         (QUEUE-GET (QUEUE)) 
                         (QUEUE-NEXT (QUEUE)) 
                         (QUEUE-PUT (QUEUE T)) 
                         (QUEUE-UNGET (QUEUE T)))


;;; (generate-prefill-dispatch-caches 'fundamental-cursor)

(PREFILL-DISPATCH-CACHES ((SETF CURSOR-STREAM) (T TEXT-CURSOR)) 
                         (CURSOR-VISIBILITY (TEXT-CURSOR)) 
                         ((SETF CURSOR-VISIBILITY) (T TEXT-CURSOR)) 
                         (DRAW-CURSOR (TEXT-CURSOR T)) 
			 (CURSOR-POSITION* (TEXT-CURSOR))
                         (CURSOR-SET-POSITION* (TEXT-CURSOR T T)))


;;; (generate-prefill-dispatch-caches 'accept-values-query)

(PREFILL-DISPATCH-CACHES (ACCEPT-VALUES-QUERY-CHANGED-P (ACCEPT-VALUES-QUERY))
			 (ACCEPT-VALUES-QUERY-EDIT-VALUE (ACCEPT-VALUES-QUERY T))
			 ((SETF ACCEPT-VALUES-QUERY-PRESENTATION) (T ACCEPT-VALUES-QUERY))
			 (ACCEPT-VALUES-QUERY-TYPE (ACCEPT-VALUES-QUERY))
			 (ACCEPT-VALUES-QUERY-VALUE (ACCEPT-VALUES-QUERY)))


;;; (generate-prefill-dispatch-caches 'kill-ring-history)

(PREFILL-DISPATCH-CACHES
  (DISPLAY-HISTORY-CONTENTS (KILL-RING-HISTORY T))
  (DISPLAY-HISTORY-MENU-ELEMENT (KILL-RING-HISTORY T T T))
  (DO-HISTORY-ELEMENTS-1 (KILL-RING-HISTORY T))
  (HISTORY-AND-ELEMENT (KILL-RING-HISTORY T))
  (HISTORY-ELEMENT (KILL-RING-HISTORY T))
  (HISTORY-ELEMENT-VISIBLE-P (KILL-RING-HISTORY T))
  (HISTORY-ELEMENTS-EQUAL (KILL-RING-HISTORY T T))
  (HISTORY-LENGTH (KILL-RING-HISTORY))
  (HISTORY-TOP-ELEMENT (KILL-RING-HISTORY))
  (PRINT-HISTORY-ELEMENT (KILL-RING-HISTORY T T))
  (PUSH-HISTORY-ELEMENT (KILL-RING-HISTORY T)))


;;; (generate-prefill-dispatch-caches 'presentation-history)

(PREFILL-DISPATCH-CACHES
  (DISPLAY-HISTORY-CONTENTS (PRESENTATION-HISTORY T))
  (DISPLAY-HISTORY-MENU-ELEMENT (PRESENTATION-HISTORY T T T))
  (DO-HISTORY-ELEMENTS-1 (PRESENTATION-HISTORY T))
  (HISTORY-AND-ELEMENT (PRESENTATION-HISTORY T))
  (HISTORY-ELEMENT (PRESENTATION-HISTORY T))
  (HISTORY-ELEMENT-VISIBLE-P (PRESENTATION-HISTORY T))
  (HISTORY-ELEMENTS-EQUAL (PRESENTATION-HISTORY T T))
  (HISTORY-LENGTH (PRESENTATION-HISTORY))
  (HISTORY-TOP-ELEMENT (PRESENTATION-HISTORY))
  (PRESENTATION-HISTORY-TYPE (PRESENTATION-HISTORY))
  (PRESENTATION-TYPE-FOR-YANKING (PRESENTATION-HISTORY))
  (PRINT-HISTORY-ELEMENT (PRESENTATION-HISTORY T T))
  (PUSH-HISTORY-ELEMENT (PRESENTATION-HISTORY T))
  (UNPARSE-PRESENTATION-HISTORY-ELEMENT (PRESENTATION-HISTORY T)))


;;; (generate-prefill-dispatch-caches 'presentation-translator)

(PREFILL-DISPATCH-CACHES
  (PRESENTATION-TRANSLATOR-COMMAND-NAME (PRESENTATION-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-DOCUMENTATION (PRESENTATION-TRANSLATOR)
                                         (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-FROM-TYPE (PRESENTATION-TRANSLATOR)
                                     (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-FUNCTION (PRESENTATION-TRANSLATOR)
                                    (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-GESTURE-NAME (PRESENTATION-TRANSLATOR)
					(PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-MENU (PRESENTATION-TRANSLATOR) (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-NAME (PRESENTATION-TRANSLATOR) (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-POINTER-DOCUMENTATION (PRESENTATION-TRANSLATOR)
                                                 (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-PRIORITY (PRESENTATION-TRANSLATOR)
                                    (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TESTER (PRESENTATION-TRANSLATOR)
                                  (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TESTER-DEFINITIVE (PRESENTATION-TRANSLATOR)
                                             (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TO-TYPE (PRESENTATION-TRANSLATOR)
                                   (PRESENTATION-TO-COMMAND-TRANSLATOR)))


;;; (generate-prefill-dispatch-caches 'presentation-to-command-translator)

(PREFILL-DISPATCH-CACHES
  (PRESENTATION-TRANSLATOR-DOCUMENTATION (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-FROM-TYPE (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-FUNCTION (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-GESTURE-NAME (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-MENU (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-NAME (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-POINTER-DOCUMENTATION (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-PRIORITY (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TESTER (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TESTER-DEFINITIVE (PRESENTATION-TO-COMMAND-TRANSLATOR))
  (PRESENTATION-TRANSLATOR-TO-TYPE (PRESENTATION-TO-COMMAND-TRANSLATOR)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'command))

(PREFILL-DISPATCH-CACHES
  (ACCEPT-METHOD ((PRESENTATION-TYPE COMMAND) T T T T TEXTUAL-VIEW)
                 ((PRESENTATION-TYPE COMMAND) T T T T TEXTUAL-DIALOG-VIEW))
  (DESCRIBE-PRESENTATION-TYPE-METHOD ((PRESENTATION-TYPE COMMAND) T T T T T))
  (HIGHLIGHT-PRESENTATION-METHOD ((PRESENTATION-TYPE COMMAND) T T T T T T))
  (PRESENT-METHOD ((PRESENTATION-TYPE COMMAND) T T T T T TEXTUAL-MENU-VIEW)
                  ((PRESENTATION-TYPE COMMAND) T T T T T TEXTUAL-VIEW))
  (PRESENTATION-SUBTYPEP-METHOD ((PRESENTATION-TYPE COMMAND) T T))
  (PRESENTATION-TYPE-HISTORY-METHOD ((PRESENTATION-TYPE COMMAND) T T))
  (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMMAND) T T T))
  (PRESENTATION-TYPEP-METHOD ((PRESENTATION-TYPE COMMAND) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'command-name))

(PREFILL-DISPATCH-CACHES
 (ACCEPT-METHOD ((PRESENTATION-TYPE COMMAND-NAME) T T T T TEXTUAL-VIEW))
 (PRESENT-METHOD ((PRESENTATION-TYPE COMMAND-NAME) T T T T T TEXTUAL-VIEW))
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMMAND-NAME) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'command-arguments))

(PREFILL-DISPATCH-CACHES
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMMAND-ARGUMENTS) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'keyword-argument-name))

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'command-or-form))

(PREFILL-DISPATCH-CACHES
  (ACCEPT-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T T T TEXTUAL-VIEW))
  (DESCRIBE-PRESENTATION-TYPE-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T T T T))
  (PRESENTATION-SUBTYPEP-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T))
  (PRESENTATION-TYPE-HISTORY-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T))
  (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T T))
  (PRESENTATION-TYPEP-METHOD ((PRESENTATION-TYPE COMMAND-OR-FORM) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'expression))

(PREFILL-DISPATCH-CACHES
  (ACCEPT-METHOD ((PRESENTATION-TYPE FORM) T T T T TEXTUAL-VIEW))
  (DESCRIBE-PRESENTATION-TYPE-METHOD ((PRESENTATION-TYPE FORM) T T T T T))
  (HIGHLIGHT-PRESENTATION-METHOD ((PRESENTATION-TYPE FORM) T T T T T T)
				 ((PRESENTATION-TYPE EXPRESSION) T T T T T T))
  (PRESENT-METHOD ((PRESENTATION-TYPE EXPRESSION) T T T T T TEXTUAL-MENU-VIEW)
		  ((PRESENTATION-TYPE EXPRESSION) T T T T T TEXTUAL-VIEW)
		  ((PRESENTATION-TYPE FORM) T T T T T TEXTUAL-MENU-VIEW)
		  ((PRESENTATION-TYPE FORM) T T T T T TEXTUAL-VIEW))
  (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE FORM) T T T)
					((PRESENTATION-TYPE EXPRESSION) T T T)))



;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'command-menu-element))

(PREFILL-DISPATCH-CACHES
 (HIGHLIGHT-PRESENTATION-METHOD ((PRESENTATION-TYPE COMMAND-MENU-ELEMENT) T T T T T T))
 (PRESENT-METHOD ((PRESENTATION-TYPE COMMAND-MENU-ELEMENT) T T T T T TEXTUAL-VIEW))
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMMAND-MENU-ELEMENT) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'menu-item))

(PREFILL-DISPATCH-CACHES
 (HIGHLIGHT-PRESENTATION-METHOD ((PRESENTATION-TYPE MENU-ITEM) T T T T T T))
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE MENU-ITEM) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'completion))

(PREFILL-DISPATCH-CACHES
  (ACCEPT-PRESENT-DEFAULT-METHOD ((PRESENTATION-TYPE COMPLETION) T T T T TEXTUAL-DIALOG-VIEW T T T T))
  (PRESENT-METHOD ((PRESENTATION-TYPE COMPLETION) T T T T T TEXTUAL-VIEW)
                  ((PRESENTATION-TYPE COMPLETION) T T T T T TEXTUAL-MENU-VIEW)
                  ((PRESENTATION-TYPE COMPLETION) T T T T T TEXTUAL-DIALOG-VIEW))
  (PRESENTATION-DEFAULT-PREPROCESSOR-METHOD ((PRESENTATION-TYPE COMPLETION) T T))
  (PRESENTATION-TYPE-HISTORY-METHOD ((PRESENTATION-TYPE COMPLETION) T T))
  (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE COMPLETION) T T T))
  (PRESENTATION-TYPEP-METHOD ((PRESENTATION-TYPE COMPLETION) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'subset-completion))

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'sequence))

(PREFILL-DISPATCH-CACHES)


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'sequence-enumerated))

(PREFILL-DISPATCH-CACHES
  (DESCRIBE-PRESENTATION-TYPE-METHOD ((PRESENTATION-TYPE SEQUENCE-ENUMERATED) T T T T T))
  (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE SEQUENCE-ENUMERATED) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'null))

(PREFILL-DISPATCH-CACHES
 (ACCEPT-METHOD ((PRESENTATION-TYPE NULL) T T T T TEXTUAL-VIEW))
 (PRESENT-METHOD ((PRESENTATION-TYPE NULL) T T T T T TEXTUAL-VIEW))
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE NULL) T T T)))


;;; (generate-prefill-dispatch-caches (find-presentation-type-class 'blank-area))

(PREFILL-DISPATCH-CACHES
 (PRESENTATION-TYPE-SPECIFIER-P-METHOD ((PRESENTATION-TYPE BLANK-AREA) T T T)))
