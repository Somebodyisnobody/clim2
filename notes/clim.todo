%%  $fiHeader: clim.todo,v 1.1 92/02/10 17:51:12 cer Exp Locker: cer $
%%%%%%%%%%%%%%%%%%%%%%%%% CLIM 2.0 plan

% Silica back-ends
  * Genera
  * Raw CLX
  * Xt
    - Motif
    - OpenLook
  * Postscript

% Holes to fill in
  * Rename DEFSYS package to CLIM-DEFSYS.
  * Reinstate clipping regions.
  * Complete abstract gadgets.
    - Take whatever is needed from ILA CLIM in order to get the non-adaptive
      gadgets together. 
  * Write a "null" frame manager that implements the same look and feel for all
    ports.
    - Genera's frame manager will inherit from this.
  * Take the keyboard gesture stuff code from ILA CLIM, but make it more
    cons-efficient.
  * Reinstate CLIM 0.9's :MENU-GROUP, but call it :MENU-BAR. 
    - NIL means no menu bar.
    - T means use the current command table.
    - A symbol names the command table to use.
  * Stream defprotocols: be sure that all of the sheet and medium protocol
    functions are explicitly defined with DEFOPERATION so that the stream
    trampolines are properly created.
  * Layout for gadgets within ACCEPTING-VALUES.
  * ACCEPTING-VALUES :OWN-WINDOW architecture that allows integration with
    toolkit dialogs.
    - For example, :OWN-WINDOW T dialogs should use a separate pane to hold the
      Exit and Abort buttons.
  * Implement clean interface to THROW-HIGHLIGHTED-PRESENTATION.
    - SWM claims that it is already clean.  Why do SWM and CER disagree?
  * Interprocess communication, i.e., one process to another to execute a frame
    command. 
  * Temporary-medium sheets.
    - Medium accessors on a sheet with no medium?
    - Temporary medium need to have their state decached.
  * Sheet protocol.
    - Where do event queues come from?
    - Repaint protocol: who clears the area and sets the clipping region when
      doing the repaint?
    - How do we deal with the case where a sheet has one children and its
      mirror allows one children only but the sheet actually has two children,
      e.g., (FRAME (HORIZONTALLY () () ())).
    - What is the precise value returned by EVENT-SHEET?  Does the EVENT-SHEET
      accessor return the sheet that the event was dispatched to?
  * Why does INPUT-PROTOCOL-MIXIN define an input buffer?  What's wrong with the
    sheet event queue?
  * Multiple layouts need to allow different size reqs for the sheets.
  * The code for switching layouts needs to be cleaned up.
  * Implement :COMPUTE size spec, that is, panes that get their size from the
    size of the output in the pane. 
  * Implement compatibility code for CLIM 1.0's :LAYOUT language.
  * Protocol to compute to the WM the desired geometry of the frame.
  * When the viewport is resized in might need to be moved, for example, if it
    becomes big enough to display the entire window: in the ALLOCATE-SPACE for
    viewport. 
  * Pointer documentation panes and other pane types,
  * Gadget enable/disable protocol.
  * Event protocol:
    - Consider design of DISTRIBUTE-EVENT.
    - Timestamp.
    - Native region.
  * On-demand scrollbars.
  * Should we do "stream relative" coordinates (as opposed to the current
    "parent relative" scheme) for output records?  It solves some problems, but
    introduces others. 
  * Should we divide the drawing protocol into a medium and a port layer, or
    should it be a single layer as Bill suggests? 
  * Spiff up the code for defining new graphics operators.
    - DEFINE-GRAPHICS-OPERATOR is like DEFGENERIC.
    - DEFINE-GRAPHICS-METHOD is like DEFMETHOD.
    - DEFINE-GRAPHICS-RECORDING.
    - What of this goes into the spec?
  * Figure out what things are part of the frame manager protocol and which are
    part of the port protocol.
    - PORT-MENU-CHOOSE should really be FRAME-MANAGER-MENU-CHOOSE.
    - Ditto, PORT-DIALOG-VIEW.
  * Figure out how views really interact with frame managers and dialogs. 
    - Indirect views. 
  * Implement more of DRAW-DESIGN for composites.  
    - Create a table that describes what works and what doesn't, for each port.
  * Figure out which WINDOW-xxx functions from CLIM 1.0 make sense.  It's OK to
    change the names to correspond to newthink.
    - WINDOW-VIEWPORT
    - WINDOW-VIEWPORT-POSITION* and WINDOW-SET-VIEWPORT-POSITION*.
    - WINDOW-INSIDE-xxx and WINDOW-SET-INSIDE-xxx.

% Cleanups
  * What should we retain from previous versions of CLIM?
    - Go through CLIM 1.0 to make sure we didn't miss anything.
    - Go through ILA CLIM with a fine-tooth comb.
  * Flush all of the DRAW-xxx-INTERNAL junk.
  * Find all the #+Silica/#-Silica stuff.
    - Make sure that the #+Silica branch really does the right thing.
    - Flush the #-Silica branch.
  * Must we really convert all of the code to lowercase?  Do it if we must.
  * Sort out the whole server path mechanism and make sure we can
    windows where we want.

% Bugs to fix
  * What's the problem with radio-boxes and move-cursor-after.  The alternative
    definitions almost work except for exit-buttons.  I think the bounding
    rectangle of gadget output records is computed incorrectly and that it
    works because the update-gadget-position is broken to match. 
  * No output-recording for draw-text*. Hence the compass menu is
    broken.
  * why? #<standard-method stream-read-char-no-hang (motif-top-level-sheet) @ #x1b18eee>
  * When default-text-margin slot yet bound. Drawing on a unexposed window
    can cause problems.

% Performance
  * Meet CLIM 1.0 performance goals.
  * Surpass CLIM 1.0 performance goals.
  * Simplify transformation classes so that there is a single class of
    transformation.  Special-case +IDENTITY-TRANSFORMATION+. 
  * Make use of volatile transformations.
    - Be careful never to modify +IDENTITY-TRANSFORMATION+.
  * Make use of volatile rectangular regions.
  * Reinstate sheet region and transformation caches (as in ILA CLIM).
  * Add port-level caches for inks.
  * (deftype coordinate () ...)
    - Flush all inappropriate FIXNUM declarations from the code and replace them
      with the new COORDINATE declaration.
    - Look at callers of FLOOR, CEILING, TRUNCATE, and ROUND, and decide what of
      those really mean to coerce to the COORDINATE type.
    - The per-port code will needs to "devicize" all coordinates.  For example,
      for CLX that means integerizing, but not for PostScript.
  * Reinstate graphics function optimizers.
    - Is any of the CLIM 1.0 graphics-defining stuff useful?
    - Is any of the ILA CLIM graphics-defining stuff useful?

% Size issues
  * Modularize with load on demand/required modules
    - Extended geometry (lines, ellipses, polygons).
    - DRAW-DESIGN and MAKE-DESIGN-FROM-OUTPUT-RECORD.
    - Some formatted output stuff: graph formatting, FILLING-OUTPUT.

% Specification
  * Write up the Silica API and protocol.
  * Write up the gadget API and protocol.
    - Document new callback function architecture.
  * Specify and implement DEFINE-PANE-TYPE.
    - Implement all of the CLIM 1.0 pane types.
  * Write up the application frame and pane API and protocol.
    - Include the layout protocol.
    - What about RWK's "mosaics"?
  * Rename all of the "POSITION*" functions to "POSITION", because a "position"
    is unambiguously an (X,Y) pair.  That is, POSITION, POSITION*, and POINT*
    all mean the same thing. 
    - Update the code accordingly.
  * What happens when you draw on a sheet that is not grafted?
  * Who enables a frame?
    - RUN-FRAME-TOP-LEVEL?
    - or DEFAULT-FRAME-TOP-LEVEL?
    - The "command loop" proposal needs to explicitly address this.
  * Who calls REALIZE-MIRROR?
  * ENABLE-MIRROR and ENABLE->MIRROR, MIRROR->ENABLE?
  * SHEET-REGION/TRANSFORMATION can change for two reasons: program does a SETF
    or the port sends a configure notify.  Should we use that :PORT-TRIGGER
    keyword in the notification protocol? 
  * Enumerate the implicit inputs to all functions.
    - *APPLICATION-FRAME*
    - *INPUT-CONTEXT* and *NULL-PRESENTATION*
    - *COMMAND-PARSER*, *COMMAND-UNPARSER*, and *PARTIAL-COMMAND-PARSER*
    - *UNSUPPLIED-ARGUMENT-MARKER* and *NUMERIC-ARGUMENT-MARKER*
    - *NUMERIC-ARGUMENT*
    - *DELIMITER-GESTURES* and *ACTIVATION-GESTURES*
    - *COMPLETION-GESTURES*, *HELP-GESTURES*, and *POSSIBILITIES-GESTURES*
    - *ABORT-GESTURES* and *ACCELERATOR-GESTURES*
    - *INPUT-WAIT-TEST* and *INPUT-WAIT-HANDLER*
    - *POINTER-BUTTON-PRESS-HANDLER*
    - *DEFAULT-TEXT-STYLE*, *NULL-TEXT-STYLE*, and *UNDEFINED-TEXT-STYLE*
  * Unify the sheet and output record protocols by giving the same name to
    generic functions that (conceptually) do the same thing.  This could lay the
    groundwork for tighter unification later, and costs us very little.
    - SHEET-ADOPT-CHILD and ADD-OUTPUT-RECORD
    - SHEET-DISOWN-CHILD and DELETE-OUTPUT-RECORD
    - SHEET-PARENT and OUTPUT-RECORD-PARENT
    - SHEET-CHILDREN and OUTPUT-RECORD-CHILDREN
    - The mapping functions.
    - SHEET-REGION and BOUNDING-RECTANGLE*
    - What else?

% User Guide.

% Demos and example code.

% Franz specific stuff.

% [todo: /vapor/usr/tech/cer/todo/franz-clim.todo]
